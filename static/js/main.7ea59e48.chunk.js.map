{"version":3,"sources":["components/BarChart/data.js","components/Shared/Axes/Axis/Axis.js","components/Shared/Axes/Axes.js","components/Shared/Bars/Bars.js","components/Shared/ResponsiveWrapper/ResponsiveWrapper.js","components/BarChart/BarChart.js","components/HBarChart/data.js","components/HBarChart/HBarChart.js","components/LineChart/data.js","components/Shared/Path/Path.js","components/LineChart/LineChart.js","components/AreaChart/data.js","components/AreaChart/AreaChart.js","components/PieChart/data.js","components/Shared/Slice/Slice.js","components/Shared/Pie/Pie.js","components/PieChart/PieChart.js","components/DonutChart/data.js","components/DonutChart/DonutChart.js","App.js","serviceWorker.js","index.js"],"names":["BarChart_data","title","value","year","Axis","this","renderAxis","axisType","concat","props","orient","axis","d3Axis","scale","tickPadding","d3Select","axisElement","call","_this","react_default","a","createElement","className","ref","el","transform","translate","Component","Axes","_ref","scales","margins","svgDimensions","height","width","xProps","xScale","bottom","tickSize","top","yProps","yScale","left","right","Axes_Axis_Axis","Bars","state","fillIndex","mouseOverHandler","i","setState","mouseOutHandler","_this2","_this$props","data","direction","bars","map","datum","key","x","y","bandwidth","fill","onMouseOver","onMouseOut","ResponsiveWrapper","ChartComponent","_Component","ResponsiveChart","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","containerWidth","containerHeight","resizeHandler","currentContainerWidth","chartContainer","getBoundingClientRect","currentContainerHeight","inherits","createClass","window","addEventListener","removeEventListener","wraperWidth","wraperHeight","assign","shouldRenderChart","renderChart","Math","max","maxValue","toConsumableArray","d","d3","padding","domain","range","Shared_Bars_Bars","Shared_Axes_Axes","HBarChart_data","LineChart_data","Path","yHeight","line","area","y0","y1","curve","alpha","newline","type","paddingInner","Shared_Path_Path","AreaChart_data","ResponseWraper","PieChart_data","Slice","_this$props$innerRadi","innerRadius","outerRadius","startAngle","endAngle","label","arc","padAngle","centroid","dy","textAnchor","Pie","colorScale","renderSlice","bind","assertThisInitialized","Shared_Slice_Slice","index","cornerRadius","pie","radius","min","Shared_Pie_Pie","DonutChart_data","App","barchart","components_BarChart_BarChart","components_HBarChart_HBarChart","components_LineChart_LineChart","components_AreaChart_AreaChart","components_PieChart_PieChart","components_DonutChart_DonutChart","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ea59e48.chunk.js","sourcesContent":["// export default [\n//     { title: 'Terminator', value: 21, year: 1984 },\n//     { title: 'Commando', value: 101, year: 1985 },\n//     { title: 'Predator', value: 25, year: 1987 },\n//     { title: 'Raw Deal', value: 26, year: 1986 },\n//     { title: 'The Running Man', value: 11, year: 1987 },\n//     { title: 'Total Recall', value: 44, year: 1990 },\n//     { title: 'Terminator 2', value: 0, year: 1991 },\n//     { title: 'Last Action Hero', value: 22, year: 1993 },\n//     { title: 'True Lies', value: 51, year: 1994 },\n//     { title: 'Eraser', value: 29, year: 1996 },\n//     { title: 'Terminator 3', value: 2, year: 2003 },\n//   ]\n\nexport default [\n  { title: 'Jan', value: 1, year: 1984 },\n  { title: 'Feb', value: 9, year: 1985 },\n  { title: 'Mar', value: 6, year: 1987 },\n  { title: 'Apr', value: 2, year: 1986 },\n  { title: 'May', value: 7, year: 1987 },\n  { title: 'Jun', value: 5, year: 1990 },\n  { title: 'Jul', value: 3, year: 1991 },\n  { title: 'Aug', value: 5, year: 1993 },\n  { title: 'Sep', value: 2, year: 1994 },\n  { title: 'Oct', value: 8, year: 1996 },\n  { title: 'Nov', value: 10, year: 2003 },\n  { title: 'Dec', value: 7, year: 2003 },\n]","import React, { Component } from 'react';\nimport * as d3Axis from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\n\nimport './Axis.css';\n\nclass Axis extends Component {\n    componentDidMount() {\n        this.renderAxis();\n    }\n\n    componentDidUpdate() {\n        this.renderAxis();\n    }\n\n    renderAxis() {\n        const axisType = `axis${this.props.orient}`\n        const axis = d3Axis[axisType]()\n          .scale(this.props.scale)\n          //.tickSize(-this.props.tickSize)\n          .tickPadding(12)\n          //.tickFormat(\"\")\n          //.ticks([4]);\n    \n        d3Select(this.axisElement).call(axis);    \n    }\n\n    render() {\n        \n        return (\n            <g className={`Axis Axis-${this.props.orient}`}\n               ref={(el) => { this.axisElement = el; }}\n               transform={this.props.translate}\n            />\n        )\n    }\n}\n\nexport default Axis;","import React from 'react';\nimport Axis from './Axis/Axis';\n\nconst Axes = ({ scales, margins, svgDimensions }) => {\n    const { height, width } = svgDimensions\n  \n    const xProps = {\n      orient: 'Bottom',\n      scale: scales.xScale,\n      translate: `translate(0, ${height - margins.bottom})`,\n      tickSize: height - margins.top - margins.bottom,\n    }\n  \n    const yProps = {\n      orient: 'Left',\n      scale: scales.yScale,\n      translate: `translate(${margins.left}, 0)`,\n      tickSize: width - margins.left - margins.right,\n    }\n  \n    return (\n      <g>\n        <Axis {...xProps} />\n        <Axis {...yProps} />\n      </g>\n    )\n  }\n\n  export default Axes;","import React, { Component } from 'react';\n\nimport './Bars.css';\n\nclass Bars extends Component {\n\n    state = {\n        fillIndex: null\n    }\n\n    mouseOverHandler = (i) => {\n        this.setState({fillIndex: i});\n    }\n    mouseOutHandler = () => {\n        this.setState({fillIndex: null})\n    }\n    render() {\n        //console.log(this.state.fillIndex);\n        //console.log(this.props.direction);\n        const { scales, margins, data, svgDimensions, direction } = this.props;\n        const { xScale, yScale } = scales;\n        const { height } = svgDimensions;\n        \n        const bars = (\n                data.map((datum, i) => \n                <rect \n                    key={datum.title} //direction ==='vertical' ? \n                    x={ direction ==='vertical' ? xScale(datum.title) : margins.left } //xScale(datum.value)\n                    y={ direction ==='vertical' ? yScale(datum.value) : yScale(datum.title)}\n                    height={ direction ==='vertical' ? height - margins.bottom - scales.yScale(datum.value)\n                             : yScale.bandwidth()}\n                    width={ direction ==='vertical' ? xScale.bandwidth() \n                             : scales.xScale(datum.value) - margins.left  }  //width - margins.right - scales.xScale(datum.value)\n                    fill={ this.state.fillIndex === i ? '#6baed6' : '#1576B6'}\n                    onMouseOver={() => this.mouseOverHandler(i)}\n                    onMouseOut={() => this.mouseOutHandler()}\n                />\n                \n            )\n        );\n        return(\n            <g>{bars}</g>\n        )\n    }\n}\n\nexport default Bars;","import React, { Component } from 'react';\n\nexport default ChartComponent => (\n    class ResponsiveChart extends Component {\n\n        state = {\n            containerWidth: null,\n            containerHeight: null\n        }\n\n        componentDidMount() {\n            this.resizeHandler();\n            window.addEventListener('resize', this.resizeHandler);\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener('resize', this.resizeHandler);\n        }\n\n        resizeHandler = () => {\n            const currentContainerWidth = this.chartContainer\n                                            .getBoundingClientRect().width;\n            const currentContainerHeight = this.chartContainer\n                                            .getBoundingClientRect().height;\n            const shouldUpdated = (this.state.containerWidth !== currentContainerWidth) ||\n                                    (this.state.containerHeight !== currentContainerHeight)\n            if(shouldUpdated)\n            {\n                this.setState({\n                    containerWidth: currentContainerWidth,\n                    containerHeight: currentContainerHeight\n                })\n            }\n        }\n        \n        renderChart() {\n            const wraperWidth = this.state.containerWidth;\n            const wraperHeight = this.state.containerHeight;\n\n            return (\n                <ChartComponent {...this.props} \n                            wraperWidth={wraperWidth}\n                            wraperHeight={wraperHeight}     \n                            />\n            )\n        }\n        \n        render() {\n            const shouldRenderChart = (this.state.containerWidth !== null) && (this.state.containerHeight !==null)  \n\n            return(\n                <div ref={(el) => { this.chartContainer = el }}>\n                    {shouldRenderChart && this.renderChart()}\n                </div>\n            )\n        }\n    }\n)","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nimport data from './data';\nimport Axes from '../Shared/Axes/Axes';\nimport Bars from '../Shared/Bars/Bars';\nimport ResponsiveWrapper from '../Shared/ResponsiveWrapper/ResponsiveWrapper';\n\nclass BarChart extends Component {\n\n    render() {\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 };\n        const svgDimensions = { \n            width: Math.max(this.props.wraperWidth, 300), \n            height: 500 //Math.max(this.props.wraperHeight, 300) \n        };\n        const maxValue = Math.max(...data.map(d => d.value));\n        // scaleBand type\n        const xScale = d3.scaleBand()\n                        .padding(0.5)\n                        .domain(data.map(d => d.title))\n                        .range([margins.left, svgDimensions.width - margins.right])        \n\n        // scaleLinear type\n        const yScale = d3.scaleLinear()\n                        .domain([0, maxValue])\n                        .range([svgDimensions.height - margins.bottom, margins.top])\n\n        return (\n            // <div id=\"bar\"></div>\n            <div>\n                <svg width={svgDimensions.width} height={svgDimensions.height}>\n                    <Bars\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        data={data}\n                        maxValue={maxValue}\n                        svgDimensions={svgDimensions}\n                        direction='vertical'\n                    />\n                    <Axes\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        svgDimensions={svgDimensions}\n                    />\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default ResponsiveWrapper(BarChart);","// export default [\n//     { title: 'Terminator', value: 21, year: 1984 },\n//     { title: 'Commando', value: 101, year: 1985 },\n//     { title: 'Predator', value: 25, year: 1987 },\n//     { title: 'Raw Deal', value: 26, year: 1986 },\n//     { title: 'The Running Man', value: 11, year: 1987 },\n//     { title: 'Total Recall', value: 44, year: 1990 },\n//     { title: 'Terminator 2', value: 0, year: 1991 },\n//     { title: 'Last Action Hero', value: 22, year: 1993 },\n//     { title: 'True Lies', value: 51, year: 1994 },\n//     { title: 'Eraser', value: 29, year: 1996 },\n//     { title: 'Terminator 3', value: 2, year: 2003 },\n//   ]\n\nexport default [\n  { title: 'Jan', value: 1, year: 1984 },\n  { title: 'Feb', value: 9, year: 1985 },\n  { title: 'Mar', value: 6, year: 1987 },\n  { title: 'Apr', value: 2, year: 1986 },\n  { title: 'May', value: 7, year: 1987 },\n  { title: 'Jun', value: 5, year: 1990 },\n  { title: 'Jul', value: 3, year: 1991 },\n  { title: 'Aug', value: 5, year: 1993 },\n  { title: 'Sep', value: 2, year: 1994 },\n  { title: 'Oct', value: 8, year: 1996 },\n  { title: 'Nov', value: 10, year: 2003 },\n  { title: 'Dec', value: 7, year: 2003 },\n]","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nimport data from './data';\nimport Axes from '../Shared/Axes/Axes';\nimport Bars from '../Shared/Bars/Bars';\nimport ResponsiveWrapper from '../Shared/ResponsiveWrapper/ResponsiveWrapper';\n\nclass HBarChart extends Component {\n    render() {\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 };\n        const svgDimensions = { \n            width: Math.max(this.props.wraperWidth, 300), \n            height: 500 //Math.max(this.props.wraperHeight, 300) \n        };\n        const maxValue = Math.max(...data.map(d => d.value));\n        \n        const xScale = d3.scaleLinear()\n                        .domain([0, maxValue])\n                        .range([margins.left, svgDimensions.width - margins.right])\n\n        const yScale = d3.scaleBand()\n                        .padding(0.5)\n                        .domain(data.map(d => d.title))\n                        .range([svgDimensions.height - margins.bottom, margins.top])\n\n\n        return(\n            <div>\n                <svg width={svgDimensions.width} height={svgDimensions.height}>\n                    <Bars\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        data={data}\n                        maxValue={maxValue}\n                        svgDimensions={svgDimensions}\n                        direction='horizontal'\n                    />\n                    <Axes\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        svgDimensions={svgDimensions}\n                    />\n                </svg>\n            </div>\n        )\n    }\n}\n\nexport default ResponsiveWrapper(HBarChart);","export default [\n  { title: 'Jan', value: 2, year: 1984 },\n  { title: 'Feb', value: 2.2, year: 1985 },\n  { title: 'Mar', value: 2.6, year: 1987 },\n  { title: 'Apr', value: 2, year: 1986 },\n  { title: 'May', value: 2.5, year: 1987 },\n  { title: 'Jun', value: 2.1, year: 1990 },\n  { title: 'Jul', value: 3, year: 1991 },\n  { title: 'Aug', value: 3.1, year: 1993 },\n  { title: 'Sep', value: 3.6, year: 1994 },\n  { title: 'Oct', value: 3.5, year: 1996 },\n  { title: 'Nov', value: 3.4, year: 2003 },\n  { title: 'Dec', value: 3, year: 2003 },\n]","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Path extends Component {\n    \n    state = {\n        fill: \"#9ccae2\"\n    }\n    \n    mouseOverHandler() {\n        this.setState({ fill: \"#b3ddf3\" });\n    }\n\n    mouseOutHandler() {\n        this.setState({ fill: \"#9ccae2\" });\n    }\n\n    render() {\n        const { scales, data, className, yHeight } = this.props;\n        const { xScale, yScale } = scales;\n\n        const line = d3.line()\n                        .x(d=> xScale(d.title))\n                        .y(d=> yScale(d.value))\n\n        const area = d3.area()\n                        .x(d=> xScale(d.title))\n                        .y0(yHeight || 0)  \n                        .y1(d=> yScale(d.value))\n                        .curve(d3.curveCatmullRom.alpha(0.1)) //curve \n\n        const newline = this.props.type ===\"line\" ? line(data) : area(data);\n        \n        return (\n            <path className={className} \n                  d={newline} \n                  fill= {this.state.fill}\n                  onMouseOver={() => this.mouseOverHandler()}\n                  onMouseOut={() => this.mouseOutHandler()}\n                  >\n            </path>\n        )\n    }\n} \n\nexport default Path;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nimport './LineChart.css';\nimport data from './data';\nimport Axes from '../Shared/Axes/Axes';\nimport Path from '../Shared/Path/Path';\nimport ResponsiveWrapper from '../Shared/ResponsiveWrapper/ResponsiveWrapper';\n\nclass LineChart extends Component {\n\n    render() {\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 };\n        const svgDimensions = { \n            width: Math.max(this.props.wraperWidth, 300), \n            height: 500 //Math.max(this.props.wraperHeight, 300) \n        };\n        const maxValue = Math.max(...data.map(d => d.value));\n        // scaleBand type\n        const xScale = d3.scaleBand()\n                        //.padding(0)\n                        .paddingInner(1)\n                        .domain(data.map(d => d.title))\n                        .range([margins.left, svgDimensions.width - margins.right])        \n\n         // scaleLinear type\n        const yScale = d3.scaleLinear()\n                        .domain([0, maxValue])\n                        .range([svgDimensions.height - margins.bottom, margins.top])\n        return (\n            <div>\n                <svg width={svgDimensions.width} height={svgDimensions.height}>\n                    <Axes\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        svgDimensions={svgDimensions}\n                    />\n                    <Path className=\"line\" \n                        type=\"line\"\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        data={data}\n                    /> \n                </svg>\n            </div>\n        )\n    }\n}\nexport default ResponsiveWrapper(LineChart);\n","export default [\n  { title: 'Jan', value: 2, year: 1984 },\n  { title: 'Feb', value: 2.2, year: 1985 },\n  { title: 'Mar', value: 2.6, year: 1987 },\n  { title: 'Apr', value: 2, year: 1986 },\n  { title: 'May', value: 2.5, year: 1987 },\n  { title: 'Jun', value: 2.1, year: 1990 },\n  { title: 'Jul', value: 3, year: 1991 },\n  { title: 'Aug', value: 3.1, year: 1993 },\n  { title: 'Sep', value: 3.6, year: 1994 },\n  { title: 'Oct', value: 3.5, year: 1996 },\n  { title: 'Nov', value: 3.4, year: 2003 },\n  { title: 'Dec', value: 3, year: 2003 },\n]","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nimport './AreaChart.css';\nimport data from './data';\nimport Axes from '../Shared/Axes/Axes';\nimport Path from '../Shared/Path/Path';\nimport ResponseWraper from '../Shared/ResponsiveWrapper/ResponsiveWrapper';\n\nclass AreaChart extends Component {\n    render() {\n        const margins = { top: 50, right: 20, bottom: 100, left: 60 };\n        const svgDimensions = { \n            width: Math.max(this.props.wraperWidth, 300), \n            height: 500 //Math.max(this.props.wraperHeight, 300) \n        };\n        const maxValue = Math.max(...data.map(d => d.value));\n        \n        // scaleBand type\n        const xScale = d3.scaleBand()\n        .paddingInner(1)\n        .domain(data.map(d => d.title))\n        .range([margins.left, svgDimensions.width - margins.right])        \n\n        // scaleLinear type\n        const yHeight = svgDimensions.height - margins.bottom;\n        const yScale = d3.scaleLinear()\n        .domain([0, maxValue])\n        .range([yHeight, margins.top])\n\n        return (\n            <div>\n                <svg width={svgDimensions.width} height={svgDimensions.height}>\n                    <Axes\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        svgDimensions={svgDimensions}\n                    />\n                    <Path className=\"area\" \n                        type=\"area\"\n                        scales={{ xScale, yScale }}\n                        margins={margins}\n                        yHeight={yHeight}\n                        data={data}\n                    /> \n                </svg>\n            </div>\n        );\n    };\n}\n\nexport default ResponseWraper(AreaChart);","export default [10,2,7,9,1]\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Slice extends Component {\n    \n    render() {\n        let {value, fill, innerRadius = 0, outerRadius, startAngle, endAngle, label} = this.props;\n       \n        let arc = d3.arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius)\n            .startAngle(startAngle)\n            .endAngle(endAngle)\n            .padAngle(.01);\n\n        return(\n            <g>\n                <path d={arc(value)} fill={fill} />\n                <text transform={`translate(${arc.centroid(value)})`}\n                      dy=\".35em\"\n                      textAnchor=\"middle\"\n                      fill=\"white\">\n                     {label}\n                </text>\n            </g>\n        );\n    };\n}\n\nexport default Slice;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nimport Slice from '../Slice/Slice';\n\nclass Pie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.colorScale = d3.schemeBlues[8];\n        this.renderSlice = this.renderSlice.bind(this);\n    }\n    \n    renderSlice(el, i) {\n        const slice = this.props.type === \"donut\" ? \n                      <Slice key={el.index}\n                             endAngle={el.endAngle}\n                             startAngle={el.startAngle}\n                             value={el.value}\n                             label={el.value}\n                             innerRadius={this.props.innerRadius}\n                             outerRadius={150}\n                             cornerRadius={this.props.cornerRadius}\n                             padAngle={this.props.padAngle}\n                             fill = {this.colorScale[i+1]}\n                      /> :\n                      <Slice key={el.index}\n                             endAngle={el.endAngle}\n                             startAngle={el.startAngle}\n                             value={el.value}\n                             label={el.value}\n                             outerRadius={150}\n                             fill = {this.colorScale[i+1]}\n                      />;\n        return slice;\n    }\n\n    render() {\n        let {x, y, data} = this.props;\n        let pie = d3.pie();\n        \n        return (\n            <g transform={`translate(${x}, ${y})`}>\n                {pie(data).map(this.renderSlice)}\n            </g>\n        );\n    }\n}\n\nexport default Pie;","import React, { Component } from 'react';\n\nimport './PieChart.css';\nimport data from './data';\nimport Pie from '../Shared/Pie/Pie';\nimport ResponsiveWrapper from '../Shared/ResponsiveWrapper/ResponsiveWrapper';\n\nclass PieChart extends Component {\n\n    render() {\n        const svgDimensions = { \n            width: Math.max(this.props.wraperWidth, 300), \n            height: 500 //Math.max(this.props.wraperHeight, 300) \n        };\n        const minViewportSize = Math.min(svgDimensions.width, svgDimensions.height);\n        const radius = (minViewportSize / 2) * 0.9;\n        const x = svgDimensions.width / 2;\n        const y = svgDimensions.height / 2;\n\n        return (\n            <div>\n                 <svg width={svgDimensions.width} height={svgDimensions.height}>\n                    <Pie x={x} y={y} radius={radius} data={data} />\n                 </svg>\n            </div>\n        )\n    }\n}\n\nexport default ResponsiveWrapper(PieChart);","export default [10,2,7,9,1]\n","import React, { Component } from 'react';\n\nimport data from './data';\nimport Pie from '../Shared/Pie/Pie';\nimport ResponsiveWrapper from '../Shared/ResponsiveWrapper/ResponsiveWrapper';\n\nclass DonutChart extends Component {\n\n    render() {\n        const svgDimensions = { \n            width: Math.max(this.props.wraperWidth, 300), \n            height: 500 //Math.max(this.props.wraperHeight, 300) \n        };\n        const minViewportSize = Math.min(svgDimensions.width, svgDimensions.height);\n        const radius = (minViewportSize / 2) * 0.9;\n        const x = svgDimensions.width / 2;\n        const y = svgDimensions.height / 2;\n\n        return (\n            <div>\n                 <svg width={svgDimensions.width} height={svgDimensions.height}>\n                    <Pie x={x} \n                         y={y} \n                         radius={radius} \n                         data={data} \n                         type=\"donut\"\n                         innerRadius={radius * .35}\n                         cornerRadius={7}\n                         padAngle={.02} />\n                 </svg>\n            </div>\n        );\n    }\n}\n\nexport default ResponsiveWrapper(DonutChart);","import React, { Component } from 'react';\n\nimport './App.css';\nimport BarChart from './components/BarChart/BarChart';\nimport HBarChart from './components/HBarChart/HBarChart';\nimport LineChart from './components/LineChart/LineChart';\nimport AreaChart from './components/AreaChart/AreaChart';\nimport PieChart from './components/PieChart/PieChart';\nimport DonutChart from './components/DonutChart/DonutChart';\n\nclass App extends Component {\n  state = {\n    barchart: {\n      data: [12, 5, 6, 6, 9, 19],\n      width: 500,\n      height: 300,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <h2>React-d3 Chart Implement </h2>\n          <hr/>\n          <h3>Bar Chart</h3>\n          <div className=\"Chart\">\n            <BarChart data={this.state.barchart.data} \n                      width={this.state.barchart.width}\n                      height={this.state.barchart.height}/>\n          </div>\n          <hr/>\n          <h3>Bar Chart (horizontal)</h3>\n          <div className=\"Chart\">\n            <HBarChart />\n          </div>\n          <hr/>\n          <h3>Line Chart</h3>\n          <div className=\"Chart\">\n            <LineChart />\n          </div>\n          <hr/>\n          <h3>Area Chart</h3>\n          <div className=\"Chart\">\n            <AreaChart />\n          </div>\n          <hr/>\n          <h3>Pie Chart</h3>\n          <div className=\"Chart\">\n            <PieChart /> \n          </div>\n          <hr/>\n          <h3>Donut Chart</h3>\n          <div className=\"Chart\">\n            <DonutChart /> \n          </div>\n          <hr/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}